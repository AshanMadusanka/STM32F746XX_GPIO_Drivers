
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000974  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b3c  08000b44  00010b44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b3c  08000b3c  00010b44  2**0
                  CONTENTS
  4 .ARM          00000000  08000b3c  08000b3c  00010b44  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b3c  08000b44  00010b44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b3c  08000b3c  00010b3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b40  08000b40  00010b40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b44  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b44  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010b44  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010b74  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a8e  00000000  00000000  00010bb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002b9  00000000  00000000  00011645  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011900  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  000119c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001f19  00000000  00000000  00011a54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001156  00000000  00000000  0001396d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008ff6  00000000  00000000  00014ac3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0001dabc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  0001dd44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000b24 	.word	0x08000b24

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000b24 	.word	0x08000b24

08000208 <delay>:
#include "stm32f746xx.h"
#include <string.h>
#define HIGH			1
#define BUTTON_PREESED HIGH

void delay(){
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0

	for(uint32_t i=0; i<500000/2; i++);
 800020e:	2300      	movs	r3, #0
 8000210:	607b      	str	r3, [r7, #4]
 8000212:	e002      	b.n	800021a <delay+0x12>
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	3301      	adds	r3, #1
 8000218:	607b      	str	r3, [r7, #4]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	4a04      	ldr	r2, [pc, #16]	; (8000230 <delay+0x28>)
 800021e:	4293      	cmp	r3, r2
 8000220:	d9f8      	bls.n	8000214 <delay+0xc>


}
 8000222:	bf00      	nop
 8000224:	bf00      	nop
 8000226:	370c      	adds	r7, #12
 8000228:	46bd      	mov	sp, r7
 800022a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022e:	4770      	bx	lr
 8000230:	0003d08f 	.word	0x0003d08f

08000234 <main>:

int main(void){
 8000234:	b580      	push	{r7, lr}
 8000236:	b08c      	sub	sp, #48	; 0x30
 8000238:	af00      	add	r7, sp, #0


	GPIO_Handle_t GpioLed, GpioButton ,GpioLed2;

	memset(&GpioLed,0,sizeof(GpioLed));
 800023a:	f107 0320 	add.w	r3, r7, #32
 800023e:	2210      	movs	r2, #16
 8000240:	2100      	movs	r1, #0
 8000242:	4618      	mov	r0, r3
 8000244:	f000 fc42 	bl	8000acc <memset>
	memset(&GpioLed2,0,sizeof(GpioLed2));
 8000248:	463b      	mov	r3, r7
 800024a:	2210      	movs	r2, #16
 800024c:	2100      	movs	r1, #0
 800024e:	4618      	mov	r0, r3
 8000250:	f000 fc3c 	bl	8000acc <memset>
	memset(&GpioButton,0,sizeof(GpioButton));
 8000254:	f107 0310 	add.w	r3, r7, #16
 8000258:	2210      	movs	r2, #16
 800025a:	2100      	movs	r1, #0
 800025c:	4618      	mov	r0, r3
 800025e:	f000 fc35 	bl	8000acc <memset>

	GpioLed.pGPIOx = GPIOA;
 8000262:	4b26      	ldr	r3, [pc, #152]	; (80002fc <main+0xc8>)
 8000264:	623b      	str	r3, [r7, #32]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber =GPIO_PIN_3;
 8000266:	2303      	movs	r3, #3
 8000268:	84bb      	strh	r3, [r7, #36]	; 0x24
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800026a:	2301      	movs	r3, #1
 800026c:	84fb      	strh	r3, [r7, #38]	; 0x26
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026e:	2302      	movs	r3, #2
 8000270:	853b      	strh	r3, [r7, #40]	; 0x28
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000272:	2300      	movs	r3, #0
 8000274:	85bb      	strh	r3, [r7, #44]	; 0x2c
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000276:	2300      	movs	r3, #0
 8000278:	857b      	strh	r3, [r7, #42]	; 0x2a

	// LED 2

	GpioLed2.pGPIOx = GPIOB;
 800027a:	4b21      	ldr	r3, [pc, #132]	; (8000300 <main+0xcc>)
 800027c:	603b      	str	r3, [r7, #0]
	GpioLed2.GPIO_PinConfig.GPIO_PinNumber =GPIO_PIN_0;
 800027e:	2300      	movs	r3, #0
 8000280:	80bb      	strh	r3, [r7, #4]
	GpioLed2.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000282:	2301      	movs	r3, #1
 8000284:	80fb      	strh	r3, [r7, #6]
	GpioLed2.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000286:	2302      	movs	r3, #2
 8000288:	813b      	strh	r3, [r7, #8]
	GpioLed2.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800028a:	2300      	movs	r3, #0
 800028c:	81bb      	strh	r3, [r7, #12]
	GpioLed2.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800028e:	2300      	movs	r3, #0
 8000290:	817b      	strh	r3, [r7, #10]


	GpioButton.pGPIOx = GPIOC;
 8000292:	4b1c      	ldr	r3, [pc, #112]	; (8000304 <main+0xd0>)
 8000294:	613b      	str	r3, [r7, #16]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber =GPIO_PIN_0;
 8000296:	2300      	movs	r3, #0
 8000298:	82bb      	strh	r3, [r7, #20]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 800029a:	2304      	movs	r3, #4
 800029c:	82fb      	strh	r3, [r7, #22]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800029e:	2302      	movs	r3, #2
 80002a0:	833b      	strh	r3, [r7, #24]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 80002a2:	2301      	movs	r3, #1
 80002a4:	837b      	strh	r3, [r7, #26]


	GPIO_PeriClockControl(GPIOA, ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	4814      	ldr	r0, [pc, #80]	; (80002fc <main+0xc8>)
 80002aa:	f000 f867 	bl	800037c <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOB, ENABLE);
 80002ae:	2101      	movs	r1, #1
 80002b0:	4813      	ldr	r0, [pc, #76]	; (8000300 <main+0xcc>)
 80002b2:	f000 f863 	bl	800037c <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOC, ENABLE);
 80002b6:	2101      	movs	r1, #1
 80002b8:	4812      	ldr	r0, [pc, #72]	; (8000304 <main+0xd0>)
 80002ba:	f000 f85f 	bl	800037c <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 80002be:	f107 0320 	add.w	r3, r7, #32
 80002c2:	4618      	mov	r0, r3
 80002c4:	f000 f972 	bl	80005ac <GPIO_Init>
	GPIO_Init(&GpioLed2);
 80002c8:	463b      	mov	r3, r7
 80002ca:	4618      	mov	r0, r3
 80002cc:	f000 f96e 	bl	80005ac <GPIO_Init>
	GPIO_Init(&GpioButton);
 80002d0:	f107 0310 	add.w	r3, r7, #16
 80002d4:	4618      	mov	r0, r3
 80002d6:	f000 f969 	bl	80005ac <GPIO_Init>

	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 80002da:	210f      	movs	r1, #15
 80002dc:	2006      	movs	r0, #6
 80002de:	f000 fbab 	bl	8000a38 <GPIO_IRQPriorityConfig>
	GPIO_IRQConfig(IRQ_NO_EXTI0, ENABLE);
 80002e2:	2101      	movs	r1, #1
 80002e4:	2006      	movs	r0, #6
 80002e6:	f000 fb21 	bl	800092c <GPIO_IRQConfig>



while(1){

	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_0);
 80002ea:	2100      	movs	r1, #0
 80002ec:	4804      	ldr	r0, [pc, #16]	; (8000300 <main+0xcc>)
 80002ee:	f000 fb07 	bl	8000900 <GPIO_ToggleOutputPin>
	delay();
 80002f2:	f7ff ff89 	bl	8000208 <delay>
	delay();
 80002f6:	f7ff ff87 	bl	8000208 <delay>
	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_0);
 80002fa:	e7f6      	b.n	80002ea <main+0xb6>
 80002fc:	40020000 	.word	0x40020000
 8000300:	40020400 	.word	0x40020400
 8000304:	40020800 	.word	0x40020800

08000308 <EXTI0_IRQHandler>:

}



void EXTI0_IRQHandler(void){
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0

	delay();
 800030c:	f7ff ff7c 	bl	8000208 <delay>
	GPIO_IRQHandling( GPIO_PIN_0);
 8000310:	2000      	movs	r0, #0
 8000312:	f000 fbbb 	bl	8000a8c <GPIO_IRQHandling>

	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_3);
 8000316:	2103      	movs	r1, #3
 8000318:	4802      	ldr	r0, [pc, #8]	; (8000324 <EXTI0_IRQHandler+0x1c>)
 800031a:	f000 faf1 	bl	8000900 <GPIO_ToggleOutputPin>

}
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}
 8000322:	bf00      	nop
 8000324:	40020000 	.word	0x40020000

08000328 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000328:	480d      	ldr	r0, [pc, #52]	; (8000360 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800032a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800032c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000330:	480c      	ldr	r0, [pc, #48]	; (8000364 <LoopForever+0x6>)
  ldr r1, =_edata
 8000332:	490d      	ldr	r1, [pc, #52]	; (8000368 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000334:	4a0d      	ldr	r2, [pc, #52]	; (800036c <LoopForever+0xe>)
  movs r3, #0
 8000336:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000338:	e002      	b.n	8000340 <LoopCopyDataInit>

0800033a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800033a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800033c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800033e:	3304      	adds	r3, #4

08000340 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000340:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000342:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000344:	d3f9      	bcc.n	800033a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000346:	4a0a      	ldr	r2, [pc, #40]	; (8000370 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000348:	4c0a      	ldr	r4, [pc, #40]	; (8000374 <LoopForever+0x16>)
  movs r3, #0
 800034a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800034c:	e001      	b.n	8000352 <LoopFillZerobss>

0800034e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800034e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000350:	3204      	adds	r2, #4

08000352 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000352:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000354:	d3fb      	bcc.n	800034e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000356:	f000 fbc1 	bl	8000adc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800035a:	f7ff ff6b 	bl	8000234 <main>

0800035e <LoopForever>:

LoopForever:
  b LoopForever
 800035e:	e7fe      	b.n	800035e <LoopForever>
  ldr   r0, =_estack
 8000360:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8000364:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000368:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800036c:	08000b44 	.word	0x08000b44
  ldr r2, =_sbss
 8000370:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000374:	2000001c 	.word	0x2000001c

08000378 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000378:	e7fe      	b.n	8000378 <ADC_IRQHandler>
	...

0800037c <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 800037c:	b480      	push	{r7}
 800037e:	b083      	sub	sp, #12
 8000380:	af00      	add	r7, sp, #0
 8000382:	6078      	str	r0, [r7, #4]
 8000384:	460b      	mov	r3, r1
 8000386:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 8000388:	78fb      	ldrb	r3, [r7, #3]
 800038a:	2b01      	cmp	r3, #1
 800038c:	d178      	bne.n	8000480 <GPIO_PeriClockControl+0x104>

        if(pGPIOx == GPIOA){
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a7a      	ldr	r2, [pc, #488]	; (800057c <GPIO_PeriClockControl+0x200>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_PeriClockControl+0x28>

            GPIOA_PCLK_EN();
 8000396:	4b7a      	ldr	r3, [pc, #488]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a79      	ldr	r2, [pc, #484]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800039c:	f043 0301 	orr.w	r3, r3, #1
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
        }


    }

}
 80003a2:	e0e5      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
        else if(pGPIOx == GPIOB){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a77      	ldr	r2, [pc, #476]	; (8000584 <GPIO_PeriClockControl+0x208>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d106      	bne.n	80003ba <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 80003ac:	4b74      	ldr	r3, [pc, #464]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a73      	ldr	r2, [pc, #460]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003b2:	f043 0302 	orr.w	r3, r3, #2
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e0da      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOC){
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a72      	ldr	r2, [pc, #456]	; (8000588 <GPIO_PeriClockControl+0x20c>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 80003c2:	4b6f      	ldr	r3, [pc, #444]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a6e      	ldr	r2, [pc, #440]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003c8:	f043 0304 	orr.w	r3, r3, #4
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e0cf      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOD){
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a6e      	ldr	r2, [pc, #440]	; (800058c <GPIO_PeriClockControl+0x210>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 80003d8:	4b69      	ldr	r3, [pc, #420]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a68      	ldr	r2, [pc, #416]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003de:	f043 0308 	orr.w	r3, r3, #8
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e0c4      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOE){
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a69      	ldr	r2, [pc, #420]	; (8000590 <GPIO_PeriClockControl+0x214>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 80003ee:	4b64      	ldr	r3, [pc, #400]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a63      	ldr	r2, [pc, #396]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80003f4:	f043 0310 	orr.w	r3, r3, #16
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e0b9      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOF){
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a65      	ldr	r2, [pc, #404]	; (8000594 <GPIO_PeriClockControl+0x218>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_PeriClockControl+0x96>
            GPIOF_PCLK_EN();
 8000404:	4b5e      	ldr	r3, [pc, #376]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a5d      	ldr	r2, [pc, #372]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800040a:	f043 0320 	orr.w	r3, r3, #32
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e0ae      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
        else if(pGPIOx == GPIOG){
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a60      	ldr	r2, [pc, #384]	; (8000598 <GPIO_PeriClockControl+0x21c>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_PeriClockControl+0xac>
            GPIOG_PCLK_EN();
 800041a:	4b59      	ldr	r3, [pc, #356]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a58      	ldr	r2, [pc, #352]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000420:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e0a3      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOH){
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a5c      	ldr	r2, [pc, #368]	; (800059c <GPIO_PeriClockControl+0x220>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d106      	bne.n	800043e <GPIO_PeriClockControl+0xc2>
            GPIOH_PCLK_EN();
 8000430:	4b53      	ldr	r3, [pc, #332]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a52      	ldr	r2, [pc, #328]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000436:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	e098      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOI){
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a57      	ldr	r2, [pc, #348]	; (80005a0 <GPIO_PeriClockControl+0x224>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d106      	bne.n	8000454 <GPIO_PeriClockControl+0xd8>
            GPIOI_PCLK_EN();
 8000446:	4b4e      	ldr	r3, [pc, #312]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044a:	4a4d      	ldr	r2, [pc, #308]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800044c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000450:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000452:	e08d      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOJ){
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a53      	ldr	r2, [pc, #332]	; (80005a4 <GPIO_PeriClockControl+0x228>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d106      	bne.n	800046a <GPIO_PeriClockControl+0xee>
            GPIOJ_PCLK_EN();
 800045c:	4b48      	ldr	r3, [pc, #288]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800045e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000460:	4a47      	ldr	r2, [pc, #284]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000462:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000466:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000468:	e082      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOK){
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	4a4e      	ldr	r2, [pc, #312]	; (80005a8 <GPIO_PeriClockControl+0x22c>)
 800046e:	4293      	cmp	r3, r2
 8000470:	d17e      	bne.n	8000570 <GPIO_PeriClockControl+0x1f4>
            GPIOK_PCLK_EN();
 8000472:	4b43      	ldr	r3, [pc, #268]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000474:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000476:	4a42      	ldr	r2, [pc, #264]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000478:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800047c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047e:	e077      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
        if(pGPIOx == GPIOA){
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	4a3e      	ldr	r2, [pc, #248]	; (800057c <GPIO_PeriClockControl+0x200>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d106      	bne.n	8000496 <GPIO_PeriClockControl+0x11a>
            GPIOA_PCLK_DI();
 8000488:	4b3d      	ldr	r3, [pc, #244]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800048a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048c:	4a3c      	ldr	r2, [pc, #240]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800048e:	f023 0301 	bic.w	r3, r3, #1
 8000492:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000494:	e06c      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
        else if(pGPIOx == GPIOB){
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	4a3a      	ldr	r2, [pc, #232]	; (8000584 <GPIO_PeriClockControl+0x208>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d106      	bne.n	80004ac <GPIO_PeriClockControl+0x130>
            GPIOB_PCLK_DI();
 800049e:	4b38      	ldr	r3, [pc, #224]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a2:	4a37      	ldr	r2, [pc, #220]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004a4:	f023 0302 	bic.w	r3, r3, #2
 80004a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004aa:	e061      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOC){
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a36      	ldr	r2, [pc, #216]	; (8000588 <GPIO_PeriClockControl+0x20c>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d106      	bne.n	80004c2 <GPIO_PeriClockControl+0x146>
            GPIOC_PCLK_DI();
 80004b4:	4b32      	ldr	r3, [pc, #200]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b8:	4a31      	ldr	r2, [pc, #196]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004ba:	f023 0304 	bic.w	r3, r3, #4
 80004be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c0:	e056      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOD){
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4a31      	ldr	r2, [pc, #196]	; (800058c <GPIO_PeriClockControl+0x210>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d106      	bne.n	80004d8 <GPIO_PeriClockControl+0x15c>
            GPIOD_PCLK_DI();
 80004ca:	4b2d      	ldr	r3, [pc, #180]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ce:	4a2c      	ldr	r2, [pc, #176]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004d0:	f023 0308 	bic.w	r3, r3, #8
 80004d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d6:	e04b      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOE){
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	4a2d      	ldr	r2, [pc, #180]	; (8000590 <GPIO_PeriClockControl+0x214>)
 80004dc:	4293      	cmp	r3, r2
 80004de:	d106      	bne.n	80004ee <GPIO_PeriClockControl+0x172>
            GPIOE_PCLK_DI();
 80004e0:	4b27      	ldr	r3, [pc, #156]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e4:	4a26      	ldr	r2, [pc, #152]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004e6:	f023 0310 	bic.w	r3, r3, #16
 80004ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ec:	e040      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOF){
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	4a28      	ldr	r2, [pc, #160]	; (8000594 <GPIO_PeriClockControl+0x218>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d106      	bne.n	8000504 <GPIO_PeriClockControl+0x188>
            GPIOF_PCLK_DI();
 80004f6:	4b22      	ldr	r3, [pc, #136]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004fa:	4a21      	ldr	r2, [pc, #132]	; (8000580 <GPIO_PeriClockControl+0x204>)
 80004fc:	f023 0320 	bic.w	r3, r3, #32
 8000500:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000502:	e035      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
        else if(pGPIOx == GPIOG){
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	4a24      	ldr	r2, [pc, #144]	; (8000598 <GPIO_PeriClockControl+0x21c>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d106      	bne.n	800051a <GPIO_PeriClockControl+0x19e>
            GPIOG_PCLK_DI();
 800050c:	4b1c      	ldr	r3, [pc, #112]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800050e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000510:	4a1b      	ldr	r2, [pc, #108]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000512:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000516:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000518:	e02a      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOH){
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4a1f      	ldr	r2, [pc, #124]	; (800059c <GPIO_PeriClockControl+0x220>)
 800051e:	4293      	cmp	r3, r2
 8000520:	d106      	bne.n	8000530 <GPIO_PeriClockControl+0x1b4>
            GPIOH_PCLK_DI();
 8000522:	4b17      	ldr	r3, [pc, #92]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000526:	4a16      	ldr	r2, [pc, #88]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000528:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800052c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800052e:	e01f      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOI){
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	4a1b      	ldr	r2, [pc, #108]	; (80005a0 <GPIO_PeriClockControl+0x224>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d106      	bne.n	8000546 <GPIO_PeriClockControl+0x1ca>
            GPIOI_PCLK_DI();
 8000538:	4b11      	ldr	r3, [pc, #68]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800053a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800053c:	4a10      	ldr	r2, [pc, #64]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800053e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000542:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000544:	e014      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOJ){
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	4a16      	ldr	r2, [pc, #88]	; (80005a4 <GPIO_PeriClockControl+0x228>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d106      	bne.n	800055c <GPIO_PeriClockControl+0x1e0>
            GPIOJ_PCLK_DI();
 800054e:	4b0c      	ldr	r3, [pc, #48]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000552:	4a0b      	ldr	r2, [pc, #44]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000554:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000558:	6313      	str	r3, [r2, #48]	; 0x30
}
 800055a:	e009      	b.n	8000570 <GPIO_PeriClockControl+0x1f4>
         else if(pGPIOx == GPIOK){
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4a12      	ldr	r2, [pc, #72]	; (80005a8 <GPIO_PeriClockControl+0x22c>)
 8000560:	4293      	cmp	r3, r2
 8000562:	d105      	bne.n	8000570 <GPIO_PeriClockControl+0x1f4>
            GPIOK_PCLK_DI();
 8000564:	4b06      	ldr	r3, [pc, #24]	; (8000580 <GPIO_PeriClockControl+0x204>)
 8000566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000568:	4a05      	ldr	r2, [pc, #20]	; (8000580 <GPIO_PeriClockControl+0x204>)
 800056a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800056e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000570:	bf00      	nop
 8000572:	370c      	adds	r7, #12
 8000574:	46bd      	mov	sp, r7
 8000576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800057a:	4770      	bx	lr
 800057c:	40020000 	.word	0x40020000
 8000580:	40023800 	.word	0x40023800
 8000584:	40020400 	.word	0x40020400
 8000588:	40020800 	.word	0x40020800
 800058c:	40020c00 	.word	0x40020c00
 8000590:	40021000 	.word	0x40021000
 8000594:	40021400 	.word	0x40021400
 8000598:	40021800 	.word	0x40021800
 800059c:	40021c00 	.word	0x40021c00
 80005a0:	40022000 	.word	0x40022000
 80005a4:	40022400 	.word	0x40022400
 80005a8:	40022800 	.word	0x40022800

080005ac <GPIO_Init>:
 *
 * @Note              -  none

 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80005ac:	b480      	push	{r7}
 80005ae:	b089      	sub	sp, #36	; 0x24
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 80005b4:	2300      	movs	r3, #0
 80005b6:	61fb      	str	r3, [r7, #28]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	88db      	ldrh	r3, [r3, #6]
 80005bc:	2b03      	cmp	r3, #3
 80005be:	d81f      	bhi.n	8000600 <GPIO_Init+0x54>


		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	88db      	ldrh	r3, [r3, #6]
 80005c4:	461a      	mov	r2, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	889b      	ldrh	r3, [r3, #4]
 80005ca:	005b      	lsls	r3, r3, #1
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	61fb      	str	r3, [r7, #28]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	681a      	ldr	r2, [r3, #0]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	889b      	ldrh	r3, [r3, #4]
 80005dc:	4619      	mov	r1, r3
 80005de:	2303      	movs	r3, #3
 80005e0:	408b      	lsls	r3, r1
 80005e2:	43db      	mvns	r3, r3
 80005e4:	4619      	mov	r1, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	400a      	ands	r2, r1
 80005ec:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	6819      	ldr	r1, [r3, #0]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	69fa      	ldr	r2, [r7, #28]
 80005fa:	430a      	orrs	r2, r1
 80005fc:	601a      	str	r2, [r3, #0]
 80005fe:	e0dd      	b.n	80007bc <GPIO_Init+0x210>
	}
	else{ // Interrup mode

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	88db      	ldrh	r3, [r3, #6]
 8000604:	2b04      	cmp	r3, #4
 8000606:	d117      	bne.n	8000638 <GPIO_Init+0x8c>
			//Configure FTSR


			EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000608:	4b52      	ldr	r3, [pc, #328]	; (8000754 <GPIO_Init+0x1a8>)
 800060a:	68db      	ldr	r3, [r3, #12]
 800060c:	687a      	ldr	r2, [r7, #4]
 800060e:	8892      	ldrh	r2, [r2, #4]
 8000610:	4611      	mov	r1, r2
 8000612:	2201      	movs	r2, #1
 8000614:	408a      	lsls	r2, r1
 8000616:	4611      	mov	r1, r2
 8000618:	4a4e      	ldr	r2, [pc, #312]	; (8000754 <GPIO_Init+0x1a8>)
 800061a:	430b      	orrs	r3, r1
 800061c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |=  ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing RSTR
 800061e:	4b4d      	ldr	r3, [pc, #308]	; (8000754 <GPIO_Init+0x1a8>)
 8000620:	689b      	ldr	r3, [r3, #8]
 8000622:	687a      	ldr	r2, [r7, #4]
 8000624:	8892      	ldrh	r2, [r2, #4]
 8000626:	4611      	mov	r1, r2
 8000628:	2201      	movs	r2, #1
 800062a:	408a      	lsls	r2, r1
 800062c:	43d2      	mvns	r2, r2
 800062e:	4611      	mov	r1, r2
 8000630:	4a48      	ldr	r2, [pc, #288]	; (8000754 <GPIO_Init+0x1a8>)
 8000632:	430b      	orrs	r3, r1
 8000634:	6093      	str	r3, [r2, #8]
 8000636:	e035      	b.n	80006a4 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	88db      	ldrh	r3, [r3, #6]
 800063c:	2b05      	cmp	r3, #5
 800063e:	d117      	bne.n	8000670 <GPIO_Init+0xc4>
			//Configure RTSR

			EXTI->RTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000640:	4b44      	ldr	r3, [pc, #272]	; (8000754 <GPIO_Init+0x1a8>)
 8000642:	689b      	ldr	r3, [r3, #8]
 8000644:	687a      	ldr	r2, [r7, #4]
 8000646:	8892      	ldrh	r2, [r2, #4]
 8000648:	4611      	mov	r1, r2
 800064a:	2201      	movs	r2, #1
 800064c:	408a      	lsls	r2, r1
 800064e:	4611      	mov	r1, r2
 8000650:	4a40      	ldr	r2, [pc, #256]	; (8000754 <GPIO_Init+0x1a8>)
 8000652:	430b      	orrs	r3, r1
 8000654:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |=  ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing FTSR
 8000656:	4b3f      	ldr	r3, [pc, #252]	; (8000754 <GPIO_Init+0x1a8>)
 8000658:	68db      	ldr	r3, [r3, #12]
 800065a:	687a      	ldr	r2, [r7, #4]
 800065c:	8892      	ldrh	r2, [r2, #4]
 800065e:	4611      	mov	r1, r2
 8000660:	2201      	movs	r2, #1
 8000662:	408a      	lsls	r2, r1
 8000664:	43d2      	mvns	r2, r2
 8000666:	4611      	mov	r1, r2
 8000668:	4a3a      	ldr	r2, [pc, #232]	; (8000754 <GPIO_Init+0x1a8>)
 800066a:	430b      	orrs	r3, r1
 800066c:	60d3      	str	r3, [r2, #12]
 800066e:	e019      	b.n	80006a4 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	88db      	ldrh	r3, [r3, #6]
 8000674:	2b06      	cmp	r3, #6
 8000676:	d115      	bne.n	80006a4 <GPIO_Init+0xf8>

			//Configure FTSR & RTSR both
			EXTI->FTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000678:	4b36      	ldr	r3, [pc, #216]	; (8000754 <GPIO_Init+0x1a8>)
 800067a:	68db      	ldr	r3, [r3, #12]
 800067c:	687a      	ldr	r2, [r7, #4]
 800067e:	8892      	ldrh	r2, [r2, #4]
 8000680:	4611      	mov	r1, r2
 8000682:	2201      	movs	r2, #1
 8000684:	408a      	lsls	r2, r1
 8000686:	4611      	mov	r1, r2
 8000688:	4a32      	ldr	r2, [pc, #200]	; (8000754 <GPIO_Init+0x1a8>)
 800068a:	430b      	orrs	r3, r1
 800068c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |=  (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800068e:	4b31      	ldr	r3, [pc, #196]	; (8000754 <GPIO_Init+0x1a8>)
 8000690:	689b      	ldr	r3, [r3, #8]
 8000692:	687a      	ldr	r2, [r7, #4]
 8000694:	8892      	ldrh	r2, [r2, #4]
 8000696:	4611      	mov	r1, r2
 8000698:	2201      	movs	r2, #1
 800069a:	408a      	lsls	r2, r1
 800069c:	4611      	mov	r1, r2
 800069e:	4a2d      	ldr	r2, [pc, #180]	; (8000754 <GPIO_Init+0x1a8>)
 80006a0:	430b      	orrs	r3, r1
 80006a2:	6093      	str	r3, [r2, #8]
		}

	// 2) Configure GPIO port selection in SYSCFG EXTICR

		uint32_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	889b      	ldrh	r3, [r3, #4]
 80006a8:	089b      	lsrs	r3, r3, #2
 80006aa:	b29b      	uxth	r3, r3
 80006ac:	61bb      	str	r3, [r7, #24]
		uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	889b      	ldrh	r3, [r3, #4]
 80006b2:	f003 0303 	and.w	r3, r3, #3
 80006b6:	617b      	str	r3, [r7, #20]
		uint32_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a26      	ldr	r2, [pc, #152]	; (8000758 <GPIO_Init+0x1ac>)
 80006be:	4293      	cmp	r3, r2
 80006c0:	d060      	beq.n	8000784 <GPIO_Init+0x1d8>
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	4a25      	ldr	r2, [pc, #148]	; (800075c <GPIO_Init+0x1b0>)
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d040      	beq.n	800074e <GPIO_Init+0x1a2>
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	4a23      	ldr	r2, [pc, #140]	; (8000760 <GPIO_Init+0x1b4>)
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d039      	beq.n	800074a <GPIO_Init+0x19e>
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	4a22      	ldr	r2, [pc, #136]	; (8000764 <GPIO_Init+0x1b8>)
 80006dc:	4293      	cmp	r3, r2
 80006de:	d032      	beq.n	8000746 <GPIO_Init+0x19a>
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	4a20      	ldr	r2, [pc, #128]	; (8000768 <GPIO_Init+0x1bc>)
 80006e6:	4293      	cmp	r3, r2
 80006e8:	d02b      	beq.n	8000742 <GPIO_Init+0x196>
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	4a1f      	ldr	r2, [pc, #124]	; (800076c <GPIO_Init+0x1c0>)
 80006f0:	4293      	cmp	r3, r2
 80006f2:	d024      	beq.n	800073e <GPIO_Init+0x192>
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	4a1d      	ldr	r2, [pc, #116]	; (8000770 <GPIO_Init+0x1c4>)
 80006fa:	4293      	cmp	r3, r2
 80006fc:	d01d      	beq.n	800073a <GPIO_Init+0x18e>
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4a1c      	ldr	r2, [pc, #112]	; (8000774 <GPIO_Init+0x1c8>)
 8000704:	4293      	cmp	r3, r2
 8000706:	d016      	beq.n	8000736 <GPIO_Init+0x18a>
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	4a1a      	ldr	r2, [pc, #104]	; (8000778 <GPIO_Init+0x1cc>)
 800070e:	4293      	cmp	r3, r2
 8000710:	d00f      	beq.n	8000732 <GPIO_Init+0x186>
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	4a19      	ldr	r2, [pc, #100]	; (800077c <GPIO_Init+0x1d0>)
 8000718:	4293      	cmp	r3, r2
 800071a:	d008      	beq.n	800072e <GPIO_Init+0x182>
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	4a17      	ldr	r2, [pc, #92]	; (8000780 <GPIO_Init+0x1d4>)
 8000722:	4293      	cmp	r3, r2
 8000724:	d101      	bne.n	800072a <GPIO_Init+0x17e>
 8000726:	230a      	movs	r3, #10
 8000728:	e02d      	b.n	8000786 <GPIO_Init+0x1da>
 800072a:	2300      	movs	r3, #0
 800072c:	e02b      	b.n	8000786 <GPIO_Init+0x1da>
 800072e:	2309      	movs	r3, #9
 8000730:	e029      	b.n	8000786 <GPIO_Init+0x1da>
 8000732:	2308      	movs	r3, #8
 8000734:	e027      	b.n	8000786 <GPIO_Init+0x1da>
 8000736:	2307      	movs	r3, #7
 8000738:	e025      	b.n	8000786 <GPIO_Init+0x1da>
 800073a:	2306      	movs	r3, #6
 800073c:	e023      	b.n	8000786 <GPIO_Init+0x1da>
 800073e:	2305      	movs	r3, #5
 8000740:	e021      	b.n	8000786 <GPIO_Init+0x1da>
 8000742:	2304      	movs	r3, #4
 8000744:	e01f      	b.n	8000786 <GPIO_Init+0x1da>
 8000746:	2303      	movs	r3, #3
 8000748:	e01d      	b.n	8000786 <GPIO_Init+0x1da>
 800074a:	2302      	movs	r3, #2
 800074c:	e01b      	b.n	8000786 <GPIO_Init+0x1da>
 800074e:	2301      	movs	r3, #1
 8000750:	e019      	b.n	8000786 <GPIO_Init+0x1da>
 8000752:	bf00      	nop
 8000754:	40013c00 	.word	0x40013c00
 8000758:	40020000 	.word	0x40020000
 800075c:	40020400 	.word	0x40020400
 8000760:	40020800 	.word	0x40020800
 8000764:	40020c00 	.word	0x40020c00
 8000768:	40021000 	.word	0x40021000
 800076c:	40021400 	.word	0x40021400
 8000770:	40021800 	.word	0x40021800
 8000774:	40021c00 	.word	0x40021c00
 8000778:	40022000 	.word	0x40022000
 800077c:	40022400 	.word	0x40022400
 8000780:	40022800 	.word	0x40022800
 8000784:	2300      	movs	r3, #0
 8000786:	613b      	str	r3, [r7, #16]

		SYSCFG_PCLK_EN();
 8000788:	4b5a      	ldr	r3, [pc, #360]	; (80008f4 <GPIO_Init+0x348>)
 800078a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800078c:	4a59      	ldr	r2, [pc, #356]	; (80008f4 <GPIO_Init+0x348>)
 800078e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000792:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode <<(temp2 *4);
 8000794:	697b      	ldr	r3, [r7, #20]
 8000796:	009b      	lsls	r3, r3, #2
 8000798:	4957      	ldr	r1, [pc, #348]	; (80008f8 <GPIO_Init+0x34c>)
 800079a:	693a      	ldr	r2, [r7, #16]
 800079c:	409a      	lsls	r2, r3
 800079e:	69bb      	ldr	r3, [r7, #24]
 80007a0:	3302      	adds	r3, #2
 80007a2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	//	3) Enable iterrupt delivery using IMR

		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007a6:	4b55      	ldr	r3, [pc, #340]	; (80008fc <GPIO_Init+0x350>)
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	687a      	ldr	r2, [r7, #4]
 80007ac:	8892      	ldrh	r2, [r2, #4]
 80007ae:	4611      	mov	r1, r2
 80007b0:	2201      	movs	r2, #1
 80007b2:	408a      	lsls	r2, r1
 80007b4:	4611      	mov	r1, r2
 80007b6:	4a51      	ldr	r2, [pc, #324]	; (80008fc <GPIO_Init+0x350>)
 80007b8:	430b      	orrs	r3, r1
 80007ba:	6013      	str	r3, [r2, #0]




	}
	temp = 0;
 80007bc:	2300      	movs	r3, #0
 80007be:	61fb      	str	r3, [r7, #28]

	// Config Speed

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	891b      	ldrh	r3, [r3, #8]
 80007c4:	461a      	mov	r2, r3
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	889b      	ldrh	r3, [r3, #4]
 80007ca:	005b      	lsls	r3, r3, #1
 80007cc:	fa02 f303 	lsl.w	r3, r2, r3
 80007d0:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	689a      	ldr	r2, [r3, #8]
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	889b      	ldrh	r3, [r3, #4]
 80007dc:	4619      	mov	r1, r3
 80007de:	2303      	movs	r3, #3
 80007e0:	408b      	lsls	r3, r1
 80007e2:	43db      	mvns	r3, r3
 80007e4:	4619      	mov	r1, r3
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	681b      	ldr	r3, [r3, #0]
 80007ea:	400a      	ands	r2, r1
 80007ec:	609a      	str	r2, [r3, #8]
			pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	6899      	ldr	r1, [r3, #8]
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	69fa      	ldr	r2, [r7, #28]
 80007fa:	430a      	orrs	r2, r1
 80007fc:	609a      	str	r2, [r3, #8]


	// Config pupd

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	895b      	ldrh	r3, [r3, #10]
 8000802:	461a      	mov	r2, r3
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	889b      	ldrh	r3, [r3, #4]
 8000808:	005b      	lsls	r3, r3, #1
 800080a:	fa02 f303 	lsl.w	r3, r2, r3
 800080e:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	68da      	ldr	r2, [r3, #12]
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	889b      	ldrh	r3, [r3, #4]
 800081a:	4619      	mov	r1, r3
 800081c:	2303      	movs	r3, #3
 800081e:	408b      	lsls	r3, r1
 8000820:	43db      	mvns	r3, r3
 8000822:	4619      	mov	r1, r3
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	400a      	ands	r2, r1
 800082a:	60da      	str	r2, [r3, #12]
			pGPIOHandle->pGPIOx->PUPDR |= temp;
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	68d9      	ldr	r1, [r3, #12]
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	681b      	ldr	r3, [r3, #0]
 8000836:	69fa      	ldr	r2, [r7, #28]
 8000838:	430a      	orrs	r2, r1
 800083a:	60da      	str	r2, [r3, #12]


	// Config OUTPUT Type

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ));
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	899b      	ldrh	r3, [r3, #12]
 8000840:	461a      	mov	r2, r3
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	889b      	ldrh	r3, [r3, #4]
 8000846:	fa02 f303 	lsl.w	r3, r2, r3
 800084a:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800084c:	687b      	ldr	r3, [r7, #4]
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	685a      	ldr	r2, [r3, #4]
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	889b      	ldrh	r3, [r3, #4]
 8000856:	4619      	mov	r1, r3
 8000858:	2301      	movs	r3, #1
 800085a:	408b      	lsls	r3, r1
 800085c:	43db      	mvns	r3, r3
 800085e:	4619      	mov	r1, r3
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	400a      	ands	r2, r1
 8000866:	605a      	str	r2, [r3, #4]
			pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	6859      	ldr	r1, [r3, #4]
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	69fa      	ldr	r2, [r7, #28]
 8000874:	430a      	orrs	r2, r1
 8000876:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	88db      	ldrh	r3, [r3, #6]
 800087c:	2b02      	cmp	r3, #2
 800087e:	d133      	bne.n	80008e8 <GPIO_Init+0x33c>

		uint8_t temp1,temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	889b      	ldrh	r3, [r3, #4]
 8000884:	08db      	lsrs	r3, r3, #3
 8000886:	b29b      	uxth	r3, r3
 8000888:	73fb      	strb	r3, [r7, #15]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	889b      	ldrh	r3, [r3, #4]
 800088e:	b2db      	uxtb	r3, r3
 8000890:	f003 0307 	and.w	r3, r3, #7
 8000894:	73bb      	strb	r3, [r7, #14]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (0xF <<(4 * temp2));
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	7bfa      	ldrb	r2, [r7, #15]
 800089c:	3208      	adds	r2, #8
 800089e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80008a2:	7bbb      	ldrb	r3, [r7, #14]
 80008a4:	009b      	lsls	r3, r3, #2
 80008a6:	220f      	movs	r2, #15
 80008a8:	fa02 f303 	lsl.w	r3, r2, r3
 80008ac:	43db      	mvns	r3, r3
 80008ae:	4618      	mov	r0, r3
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	7bfa      	ldrb	r2, [r7, #15]
 80008b6:	4001      	ands	r1, r0
 80008b8:	3208      	adds	r2, #8
 80008ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4 * temp2);
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	7bfa      	ldrb	r2, [r7, #15]
 80008c4:	3208      	adds	r2, #8
 80008c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	89db      	ldrh	r3, [r3, #14]
 80008ce:	461a      	mov	r2, r3
 80008d0:	7bbb      	ldrb	r3, [r7, #14]
 80008d2:	009b      	lsls	r3, r3, #2
 80008d4:	fa02 f303 	lsl.w	r3, r2, r3
 80008d8:	4618      	mov	r0, r3
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	7bfa      	ldrb	r2, [r7, #15]
 80008e0:	4301      	orrs	r1, r0
 80008e2:	3208      	adds	r2, #8
 80008e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80008e8:	bf00      	nop
 80008ea:	3724      	adds	r7, #36	; 0x24
 80008ec:	46bd      	mov	sp, r7
 80008ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008f2:	4770      	bx	lr
 80008f4:	40023800 	.word	0x40023800
 80008f8:	40013800 	.word	0x40013800
 80008fc:	40013c00 	.word	0x40013c00

08000900 <GPIO_ToggleOutputPin>:

	pGPIOx->ODR = Value;


}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000900:	b480      	push	{r7}
 8000902:	b083      	sub	sp, #12
 8000904:	af00      	add	r7, sp, #0
 8000906:	6078      	str	r0, [r7, #4]
 8000908:	460b      	mov	r3, r1
 800090a:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	695b      	ldr	r3, [r3, #20]
 8000910:	78fa      	ldrb	r2, [r7, #3]
 8000912:	2101      	movs	r1, #1
 8000914:	fa01 f202 	lsl.w	r2, r1, r2
 8000918:	405a      	eors	r2, r3
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	615a      	str	r2, [r3, #20]


}
 800091e:	bf00      	nop
 8000920:	370c      	adds	r7, #12
 8000922:	46bd      	mov	sp, r7
 8000924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000928:	4770      	bx	lr
	...

0800092c <GPIO_IRQConfig>:
 *
 * @Note              -  none

 */

void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t EnorDi){
 800092c:	b480      	push	{r7}
 800092e:	b083      	sub	sp, #12
 8000930:	af00      	add	r7, sp, #0
 8000932:	4603      	mov	r3, r0
 8000934:	460a      	mov	r2, r1
 8000936:	71fb      	strb	r3, [r7, #7]
 8000938:	4613      	mov	r3, r2
 800093a:	71bb      	strb	r3, [r7, #6]

if(EnorDi == ENABLE){  // ISERx Registers Enable
 800093c:	79bb      	ldrb	r3, [r7, #6]
 800093e:	2b01      	cmp	r3, #1
 8000940:	d133      	bne.n	80009aa <GPIO_IRQConfig+0x7e>

	if(IRQNumber <= 31){
 8000942:	79fb      	ldrb	r3, [r7, #7]
 8000944:	2b1f      	cmp	r3, #31
 8000946:	d80a      	bhi.n	800095e <GPIO_IRQConfig+0x32>

		*NVIC_ISER0 |= (1<< IRQNumber);
 8000948:	4b35      	ldr	r3, [pc, #212]	; (8000a20 <GPIO_IRQConfig+0xf4>)
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	79fa      	ldrb	r2, [r7, #7]
 800094e:	2101      	movs	r1, #1
 8000950:	fa01 f202 	lsl.w	r2, r1, r2
 8000954:	4611      	mov	r1, r2
 8000956:	4a32      	ldr	r2, [pc, #200]	; (8000a20 <GPIO_IRQConfig+0xf4>)
 8000958:	430b      	orrs	r3, r1
 800095a:	6013      	str	r3, [r2, #0]
		}



}
}
 800095c:	e059      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
	}else if(IRQNumber > 31 && IRQNumber < 64){
 800095e:	79fb      	ldrb	r3, [r7, #7]
 8000960:	2b1f      	cmp	r3, #31
 8000962:	d90f      	bls.n	8000984 <GPIO_IRQConfig+0x58>
 8000964:	79fb      	ldrb	r3, [r7, #7]
 8000966:	2b3f      	cmp	r3, #63	; 0x3f
 8000968:	d80c      	bhi.n	8000984 <GPIO_IRQConfig+0x58>
		*NVIC_ISER1 |= (1<< IRQNumber % 32);
 800096a:	4b2e      	ldr	r3, [pc, #184]	; (8000a24 <GPIO_IRQConfig+0xf8>)
 800096c:	681b      	ldr	r3, [r3, #0]
 800096e:	79fa      	ldrb	r2, [r7, #7]
 8000970:	f002 021f 	and.w	r2, r2, #31
 8000974:	2101      	movs	r1, #1
 8000976:	fa01 f202 	lsl.w	r2, r1, r2
 800097a:	4611      	mov	r1, r2
 800097c:	4a29      	ldr	r2, [pc, #164]	; (8000a24 <GPIO_IRQConfig+0xf8>)
 800097e:	430b      	orrs	r3, r1
 8000980:	6013      	str	r3, [r2, #0]
 8000982:	e046      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
	}else if (IRQNumber >= 64 && IRQNumber < 96){
 8000984:	79fb      	ldrb	r3, [r7, #7]
 8000986:	2b3f      	cmp	r3, #63	; 0x3f
 8000988:	d943      	bls.n	8000a12 <GPIO_IRQConfig+0xe6>
 800098a:	79fb      	ldrb	r3, [r7, #7]
 800098c:	2b5f      	cmp	r3, #95	; 0x5f
 800098e:	d840      	bhi.n	8000a12 <GPIO_IRQConfig+0xe6>
		*NVIC_ISER2 |= (1<< IRQNumber % 64);
 8000990:	4b25      	ldr	r3, [pc, #148]	; (8000a28 <GPIO_IRQConfig+0xfc>)
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	79fa      	ldrb	r2, [r7, #7]
 8000996:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800099a:	2101      	movs	r1, #1
 800099c:	fa01 f202 	lsl.w	r2, r1, r2
 80009a0:	4611      	mov	r1, r2
 80009a2:	4a21      	ldr	r2, [pc, #132]	; (8000a28 <GPIO_IRQConfig+0xfc>)
 80009a4:	430b      	orrs	r3, r1
 80009a6:	6013      	str	r3, [r2, #0]
}
 80009a8:	e033      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
	if(IRQNumber <= 31){
 80009aa:	79fb      	ldrb	r3, [r7, #7]
 80009ac:	2b1f      	cmp	r3, #31
 80009ae:	d80a      	bhi.n	80009c6 <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1<< IRQNumber);
 80009b0:	4b1e      	ldr	r3, [pc, #120]	; (8000a2c <GPIO_IRQConfig+0x100>)
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	79fa      	ldrb	r2, [r7, #7]
 80009b6:	2101      	movs	r1, #1
 80009b8:	fa01 f202 	lsl.w	r2, r1, r2
 80009bc:	4611      	mov	r1, r2
 80009be:	4a1b      	ldr	r2, [pc, #108]	; (8000a2c <GPIO_IRQConfig+0x100>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	6013      	str	r3, [r2, #0]
}
 80009c4:	e025      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 80009c6:	79fb      	ldrb	r3, [r7, #7]
 80009c8:	2b1f      	cmp	r3, #31
 80009ca:	d90f      	bls.n	80009ec <GPIO_IRQConfig+0xc0>
 80009cc:	79fb      	ldrb	r3, [r7, #7]
 80009ce:	2b3f      	cmp	r3, #63	; 0x3f
 80009d0:	d80c      	bhi.n	80009ec <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1<< IRQNumber % 32);
 80009d2:	4b17      	ldr	r3, [pc, #92]	; (8000a30 <GPIO_IRQConfig+0x104>)
 80009d4:	681b      	ldr	r3, [r3, #0]
 80009d6:	79fa      	ldrb	r2, [r7, #7]
 80009d8:	f002 021f 	and.w	r2, r2, #31
 80009dc:	2101      	movs	r1, #1
 80009de:	fa01 f202 	lsl.w	r2, r1, r2
 80009e2:	4611      	mov	r1, r2
 80009e4:	4a12      	ldr	r2, [pc, #72]	; (8000a30 <GPIO_IRQConfig+0x104>)
 80009e6:	430b      	orrs	r3, r1
 80009e8:	6013      	str	r3, [r2, #0]
 80009ea:	e012      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
		}else if (IRQNumber >= 64 && IRQNumber < 96){
 80009ec:	79fb      	ldrb	r3, [r7, #7]
 80009ee:	2b3f      	cmp	r3, #63	; 0x3f
 80009f0:	d90f      	bls.n	8000a12 <GPIO_IRQConfig+0xe6>
 80009f2:	79fb      	ldrb	r3, [r7, #7]
 80009f4:	2b5f      	cmp	r3, #95	; 0x5f
 80009f6:	d80c      	bhi.n	8000a12 <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1<< IRQNumber % 64);
 80009f8:	4b0e      	ldr	r3, [pc, #56]	; (8000a34 <GPIO_IRQConfig+0x108>)
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	79fa      	ldrb	r2, [r7, #7]
 80009fe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000a02:	2101      	movs	r1, #1
 8000a04:	fa01 f202 	lsl.w	r2, r1, r2
 8000a08:	4611      	mov	r1, r2
 8000a0a:	4a0a      	ldr	r2, [pc, #40]	; (8000a34 <GPIO_IRQConfig+0x108>)
 8000a0c:	430b      	orrs	r3, r1
 8000a0e:	6013      	str	r3, [r2, #0]
}
 8000a10:	e7ff      	b.n	8000a12 <GPIO_IRQConfig+0xe6>
 8000a12:	bf00      	nop
 8000a14:	370c      	adds	r7, #12
 8000a16:	46bd      	mov	sp, r7
 8000a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a1c:	4770      	bx	lr
 8000a1e:	bf00      	nop
 8000a20:	e000e100 	.word	0xe000e100
 8000a24:	e000e104 	.word	0xe000e104
 8000a28:	e000e108 	.word	0xe000e108
 8000a2c:	e000e180 	.word	0xe000e180
 8000a30:	e000e184 	.word	0xe000e184
 8000a34:	e000e188 	.word	0xe000e188

08000a38 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t PinNumber, uint32_t IRQPriority){
 8000a38:	b480      	push	{r7}
 8000a3a:	b085      	sub	sp, #20
 8000a3c:	af00      	add	r7, sp, #0
 8000a3e:	4603      	mov	r3, r0
 8000a40:	6039      	str	r1, [r7, #0]
 8000a42:	71fb      	strb	r3, [r7, #7]

 uint8_t iprx = IRQPriority /4;
 8000a44:	683b      	ldr	r3, [r7, #0]
 8000a46:	089b      	lsrs	r3, r3, #2
 8000a48:	73fb      	strb	r3, [r7, #15]
 uint8_t iprx_section = IRQPriority % 4;
 8000a4a:	683b      	ldr	r3, [r7, #0]
 8000a4c:	b2db      	uxtb	r3, r3
 8000a4e:	f003 0303 	and.w	r3, r3, #3
 8000a52:	73bb      	strb	r3, [r7, #14]

  uint8_t shift_amount = ( 8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000a54:	7bbb      	ldrb	r3, [r7, #14]
 8000a56:	00db      	lsls	r3, r3, #3
 8000a58:	b2db      	uxtb	r3, r3
 8000a5a:	3304      	adds	r3, #4
 8000a5c:	737b      	strb	r3, [r7, #13]

  *(NVIC_PR_BASEADDR + iprx) |= (IRQPriority <<shift_amount);
 8000a5e:	7bfb      	ldrb	r3, [r7, #15]
 8000a60:	009a      	lsls	r2, r3, #2
 8000a62:	4b09      	ldr	r3, [pc, #36]	; (8000a88 <GPIO_IRQPriorityConfig+0x50>)
 8000a64:	4413      	add	r3, r2
 8000a66:	6819      	ldr	r1, [r3, #0]
 8000a68:	7b7b      	ldrb	r3, [r7, #13]
 8000a6a:	683a      	ldr	r2, [r7, #0]
 8000a6c:	409a      	lsls	r2, r3
 8000a6e:	7bfb      	ldrb	r3, [r7, #15]
 8000a70:	0098      	lsls	r0, r3, #2
 8000a72:	4b05      	ldr	r3, [pc, #20]	; (8000a88 <GPIO_IRQPriorityConfig+0x50>)
 8000a74:	4403      	add	r3, r0
 8000a76:	430a      	orrs	r2, r1
 8000a78:	601a      	str	r2, [r3, #0]


}
 8000a7a:	bf00      	nop
 8000a7c:	3714      	adds	r7, #20
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop
 8000a88:	e000e400 	.word	0xe000e400

08000a8c <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber){
 8000a8c:	b480      	push	{r7}
 8000a8e:	b083      	sub	sp, #12
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	4603      	mov	r3, r0
 8000a94:	71fb      	strb	r3, [r7, #7]

	if(EXTI->PR & (1<< PinNumber)){
 8000a96:	4b0c      	ldr	r3, [pc, #48]	; (8000ac8 <GPIO_IRQHandling+0x3c>)
 8000a98:	695b      	ldr	r3, [r3, #20]
 8000a9a:	79fa      	ldrb	r2, [r7, #7]
 8000a9c:	2101      	movs	r1, #1
 8000a9e:	fa01 f202 	lsl.w	r2, r1, r2
 8000aa2:	4013      	ands	r3, r2
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d009      	beq.n	8000abc <GPIO_IRQHandling+0x30>


		EXTI->PR |= (1<<PinNumber);
 8000aa8:	4b07      	ldr	r3, [pc, #28]	; (8000ac8 <GPIO_IRQHandling+0x3c>)
 8000aaa:	695b      	ldr	r3, [r3, #20]
 8000aac:	79fa      	ldrb	r2, [r7, #7]
 8000aae:	2101      	movs	r1, #1
 8000ab0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ab4:	4611      	mov	r1, r2
 8000ab6:	4a04      	ldr	r2, [pc, #16]	; (8000ac8 <GPIO_IRQHandling+0x3c>)
 8000ab8:	430b      	orrs	r3, r1
 8000aba:	6153      	str	r3, [r2, #20]
	}

}
 8000abc:	bf00      	nop
 8000abe:	370c      	adds	r7, #12
 8000ac0:	46bd      	mov	sp, r7
 8000ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ac6:	4770      	bx	lr
 8000ac8:	40013c00 	.word	0x40013c00

08000acc <memset>:
 8000acc:	4402      	add	r2, r0
 8000ace:	4603      	mov	r3, r0
 8000ad0:	4293      	cmp	r3, r2
 8000ad2:	d100      	bne.n	8000ad6 <memset+0xa>
 8000ad4:	4770      	bx	lr
 8000ad6:	f803 1b01 	strb.w	r1, [r3], #1
 8000ada:	e7f9      	b.n	8000ad0 <memset+0x4>

08000adc <__libc_init_array>:
 8000adc:	b570      	push	{r4, r5, r6, lr}
 8000ade:	4d0d      	ldr	r5, [pc, #52]	; (8000b14 <__libc_init_array+0x38>)
 8000ae0:	4c0d      	ldr	r4, [pc, #52]	; (8000b18 <__libc_init_array+0x3c>)
 8000ae2:	1b64      	subs	r4, r4, r5
 8000ae4:	10a4      	asrs	r4, r4, #2
 8000ae6:	2600      	movs	r6, #0
 8000ae8:	42a6      	cmp	r6, r4
 8000aea:	d109      	bne.n	8000b00 <__libc_init_array+0x24>
 8000aec:	4d0b      	ldr	r5, [pc, #44]	; (8000b1c <__libc_init_array+0x40>)
 8000aee:	4c0c      	ldr	r4, [pc, #48]	; (8000b20 <__libc_init_array+0x44>)
 8000af0:	f000 f818 	bl	8000b24 <_init>
 8000af4:	1b64      	subs	r4, r4, r5
 8000af6:	10a4      	asrs	r4, r4, #2
 8000af8:	2600      	movs	r6, #0
 8000afa:	42a6      	cmp	r6, r4
 8000afc:	d105      	bne.n	8000b0a <__libc_init_array+0x2e>
 8000afe:	bd70      	pop	{r4, r5, r6, pc}
 8000b00:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b04:	4798      	blx	r3
 8000b06:	3601      	adds	r6, #1
 8000b08:	e7ee      	b.n	8000ae8 <__libc_init_array+0xc>
 8000b0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b0e:	4798      	blx	r3
 8000b10:	3601      	adds	r6, #1
 8000b12:	e7f2      	b.n	8000afa <__libc_init_array+0x1e>
 8000b14:	08000b3c 	.word	0x08000b3c
 8000b18:	08000b3c 	.word	0x08000b3c
 8000b1c:	08000b3c 	.word	0x08000b3c
 8000b20:	08000b40 	.word	0x08000b40

08000b24 <_init>:
 8000b24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b26:	bf00      	nop
 8000b28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b2a:	bc08      	pop	{r3}
 8000b2c:	469e      	mov	lr, r3
 8000b2e:	4770      	bx	lr

08000b30 <_fini>:
 8000b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b32:	bf00      	nop
 8000b34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b36:	bc08      	pop	{r3}
 8000b38:	469e      	mov	lr, r3
 8000b3a:	4770      	bx	lr
